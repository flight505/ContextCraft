---
description: 
globs: 
alwaysApply: true
---
# MCP Think Tank: Unified Project Rule

This project uses MCP Think Tank for structured reasoning, persistent memory, advanced task management, and web research.  
**All agents and users should follow these guidelines to ensure consistent, effective use of the MCP server and its tools.**

## 1. Thinking & Reasoning

- Use the `think` tool for all complex decisions, architecture planning, and problem-solving.
- Break down problems into clear steps and reflect on reasoning.
- Store important decisions and patterns in memory for future reference.

## 2. Memory & Knowledge Graph

- Use memory tools (`create_entities`, `add_observations`, `create_relations`, etc.) to:
  - Commit key decisions, reusable patterns, and architectural choices.
  - Build relationships between concepts and reference previous knowledge.
- Before creating new solutions, search memory for relevant prior work.

## 3. Task Management

- Use the task tools (`plan_tasks`, `list_tasks`, `next_task`, `complete_task`, `update_tasks`) to:
  - Plan, track, and update project tasks.
  - Mark tasks as complete when finished and update their status as work progresses.
  - Use task dependencies and priorities to organize work.

## 4. Web Research

- Use the Exa tools (`exa_search`, `exa_answer`) for all web research and fact-finding.
- Always cite sources and summarize findings in memory when relevant.
- **Note:** Exa tools require a valid `EXA_API_KEY` in your MCP server configuration.

## 5. Logging & Debugging

- Use the logging system for all operational events.
- Check logs for troubleshooting and ensure log rotation is configured.

## 6. General Workflow

- Reference and build upon previous decisions and patterns.
- Document all significant changes and rationale.
- Maintain consistent coding and architectural patterns.
- Update this rule as new tools or workflows are added.


## üõ†Ô∏è Available Tools (with Example Usage)

| Tool         | Purpose                                      | Example Usage                                                                 |
|--------------|----------------------------------------------|-------------------------------------------------------------------------------|
| `think`      | Structured reasoning & reflection            | `think("Design auth system for microservices...")`                            |
| `create_entities` | Add new concepts to memory              | `create_entities([{name: "AuthSystem", ...}])`                                |
| `add_observations` | Add facts to existing entities         | `add_observations([{entityName: "AuthSystem", contents: ["Uses JWT"]}])`      |
| `create_relations` | Link concepts in the knowledge graph   | `create_relations([{from: "AuthSystem", to: "Security", relationType: "enhances"}])` |
| `plan_tasks` | Create multiple project tasks                | `plan_tasks([{description: "Implement login", priority: "high"}])`            |
| `list_tasks` | List tasks by status/priority                | `list_tasks({status: "todo"})`                                                |
| `next_task`  | Get and start the next highest priority task | `next_task({})`                                                               |
| `complete_task` | Mark a task as done                       | `complete_task({id: "task-uuid"})`                                            |
| `exa_search` | Web search via Exa API                       | `exa_search({query: "latest in LLMs"})`                                       |
| `exa_answer` | Get sourced answers from the web             | `exa_answer({question: "What is quantum advantage?"})`                        |


## ü§ñ Agent/IDE Instructions

- When a user requests research, use `exa_search` or `exa_answer`.
- For complex reasoning, always use the `think` tool and commit important findings to memory.
- Use task tools to manage and update project tasks.
- Reference memory before proposing new solutions.
- Follow the workflow and update this rule as needed.
