name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - run: npm ci

      - name: Verify signing credentials (macOS only)
        if: matrix.os == 'macos-latest'
        run: |
          if [ -z "${{ secrets.APPLE_ID }}" ]; then echo "❌ APPLE_ID is not set"; exit 1; fi
          if [ -z "${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}" ]; then echo "❌ APPLE_APP_SPECIFIC_PASSWORD is not set"; exit 1; fi
          if [ -z "${{ secrets.APPLE_TEAM_ID }}" ]; then echo "❌ APPLE_TEAM_ID is not set"; exit 1; fi
          if [ -z "${{ secrets.CSC_LINK }}" ]; then echo "❌ CSC_LINK is not set"; exit 1; fi
          if [ -z "${{ secrets.CSC_KEY_PASSWORD }}" ]; then echo "❌ CSC_KEY_PASSWORD is not set"; exit 1; fi

      - name: Install macOS Build Prerequisites
        if: matrix.os == 'macos-latest'
        run: |
          xcode-select --install || true
          brew install python@3 || true
          npm install -g node-gyp

      - name: Rebuild native modules (macOS only)
        if: matrix.os == 'macos-latest'
        run: |
          npm rebuild tree-sitter --build-from-source

      - name: Debug native build failure (macOS only)
        if: failure() && matrix.os == 'macos-latest'
        run: |
          echo "tree-sitter build log:"
          cat $(find . -name 'npm-debug.log' | head -n 1) || echo "No npm-debug.log found"

      - name: Build app
        run: |
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            node scripts/mac-build.js --verbose
          else
            npm run package:win
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build
          path: |
            release-builds/**/*.dmg
            release-builds/**/*.zip
            release-builds/**/*.exe
            release-builds/**/*.msi

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            release-builds/**/*.dmg
            release-builds/**/*.zip
            release-builds/**/*.exe
            release-builds/**/*.msi
          draft: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}