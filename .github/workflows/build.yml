name: Build and Release

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    name: Validate Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
      - run: npm install
      - run: npm run lint || true
      - run: npm run build
        env:
          CI: true

  build_and_release:
    name: Build and Release Artifacts
    needs: validate
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, windows-latest ]
        include:
          - os: macos-latest
            package_cmd: npm run package:mac --verbose
            artifact_pattern: |
              release-builds/**/*.dmg
              release-builds/**/*.zip
            release_glob: |
              release-builds/**/*.dmg
              release-builds/**/*.zip
          - os: windows-latest
            package_cmd: npm run package:win --verbose
            artifact_pattern: |
              release-builds/**/*.exe
              release-builds/**/*.msi
            release_glob: release-builds/**/*.exe
    env:
      CXXFLAGS: --std=c++20
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CSC_LINK: ${{ secrets.CSC_LINK }}
      CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      CSC_IDENTITY_AUTO_DISCOVERY: ${{ matrix.os == 'macos-latest' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm install

      - name: Build Vite App
        run: npm run build
        env:
          CI: true

      - name: Create release-builds directory
        run: mkdir -p release-builds

      - name: Package Application
        run: ${{ matrix.package_cmd }}

      - name: List Build Output
        run: |
          echo "Artifacts:"  
          ls -R release-builds || echo "No artifacts found"

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build
          path: ${{ matrix.artifact_pattern }}
          if-no-files-found: warn

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ matrix.release_glob }}
          draft: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}