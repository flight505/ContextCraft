name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, master]

jobs:
  validate:
    name: Validate PR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint:strict
        
      - name: Build application
        run: npm run build
        
      - name: Verify build
        run: npm run verify-build

  test-build:
    name: Test build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: validate
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Cache electron-builder cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/electron
            ~/.cache/electron-builder
          key: ${{ runner.os }}-electron-builder-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-electron-builder-

      - name: Build Vite app
        run: npm run build
      
      # Platform-specific build checks
      - name: Test macOS build
        if: matrix.os == 'macos-latest'
        run: npm run test-build:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Test Windows build
        if: matrix.os == 'windows-latest'
        run: npm run test-build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Test Linux build
        if: matrix.os == 'ubuntu-latest'
        run: npm run test-build:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

  status-check:
    name: PR Status Check
    runs-on: ubuntu-latest
    needs: [validate, test-build]
    if: always()
    steps:
      - name: Check build matrix status
        if: needs.validate.result == 'success' && needs.test-build.result == 'success'
        run: exit 0
      
      - name: Build matrix failed
        if: needs.validate.result != 'success' || needs.test-build.result != 'success'
        run: exit 1 